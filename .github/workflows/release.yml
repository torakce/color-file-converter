name: Build and Release

on:
  push:
    tags:
      - 'v*'  # Déclenche sur les tags version (v1.0.0, v2.1.0, etc.)

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
        
    - name: Build Optimized Portable Version
      run: |
        powershell -ExecutionPolicy Bypass -File "scripts/Build-Portable-Light.ps1" -CleanBuild
        
    - name: Package Release
      run: |
        Compress-Archive -Path "Release/ColorFileConverter/*" -DestinationPath "ColorFileConverter-${{ github.ref_name }}.zip"
        
    - name: Create Release
      uses: actions/create-release@v1
      id: create_release
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Color File Converter ${{ github.ref_name }}
        body: |
          ## 🎉 Color File Converter ${{ github.ref_name }}
          
          ### 📥 Téléchargement :
          
          **ColorFileConverter-${{ github.ref_name }}.zip** (~194 MB)
          
          ### ✨ Fonctionnalités :
          - ✅ **Conversion PDF → TIFF** (mono-page et multi-page)  
          - ✅ **Aperçu avec navigation par pages** (◀ ▶)
          - ✅ **Interface intuitive** avec zoom et pan
          - ✅ **Profils personnalisables** pour différents besoins
          - ✅ **Mode portable** - aucune installation requise
          - ✅ **Structure propre** - exe facilement accessible
          
          ### 🚀 Installation :
          1. **Télécharger** le fichier ZIP
          2. **Extraire** dans un dossier
          3. **Double-cliquer** sur `Converter.Gui.exe` (visible à la racine!)
          4. **C'est tout !** - Pas besoin de chercher dans des sous-dossiers
          
          ### 📂 Structure :
          ```
          ColorFileConverter/
          ├── Converter.Gui.exe     ← Lancez directement ce fichier !
          ├── README.txt           
          └── Runtime/             ← Toutes les dépendances
              ├── *.dll
              └── Ghostscript/
          ```
          
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./ColorFileConverter-${{ github.ref_name }}.zip
        asset_name: ColorFileConverter-${{ github.ref_name }}.zip
        asset_content_type: application/zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}